{"version":3,"sources":["webpack:///./src/components/link.tsx","webpack:///./src/components/chip.tsx","webpack:///./src/components/layout-article-header.tsx","webpack:///./src/components/blog-layout.tsx"],"names":["Link","to","children","dark","className","Chip","gradient","iconBackDark","Header","title","subhead","date","tags","description","length","map","tag","i","key","BlogLayout","pageContext","frontmatter","html","header","dangerouslySetInnerHTML","__html"],"mappings":"mJAoBeA,EAZa,SAAC,GAAD,IAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,SAAP,IAAiBC,YAAjB,gBAC1B,kBAAC,IAAD,CACEF,GAAIA,EACJG,UACE,gCACCD,EAAO,0BAA4B,uBAGrCD,I,YCHUG,EAVsB,SAAC,GAAD,IAAGH,EAAH,EAAGA,SAAH,IAAaC,YAAb,gBACnC,0BAAMC,UAAS,gBAAkBE,IAAlB,mBACb,0BAAMF,UAAS,YAAaD,EAAO,kBAAoB,YAAxC,SACb,0BAAMC,WAAcD,EAAO,gBAAkB,iBAA9B,+CACZD,M,YCDHK,EACJ,0BAAMH,UAAU,qBACd,kBAAC,EAAD,CAAMD,MAAI,EAACF,GAAG,KACZ,0BAAMG,UAAU,iBAAhB,SAEF,kBAAC,IAAD,CAAcA,UAAU,SAwDbI,EA5CiB,SAAC,GAAD,IAC9BC,EAD8B,EAC9BA,MACAC,EAF8B,EAE9BA,QACAC,EAH8B,EAG9BA,KAH8B,IAI9BC,YAJ8B,MAIvB,GAJuB,EAK9BC,EAL8B,EAK9BA,YAL8B,OAO9B,oCACE,yBAAKT,UAAU,gEACb,wBAAIA,UAAU,kBAAkBM,GAChC,wBAAIN,UAAU,cAAcK,GAC5B,yBAAKL,UAAU,UAGR,MAARO,EACC,yBAAKP,UAAU,UAEf,wBAAIA,UAAU,4DACXO,GAIL,yBAAKP,UAAU,SAEC,MAAfS,EAAsB,KACrB,uBAAGT,UAAU,iBAAiBS,GAGhC,yBAAKT,UAAU,8BACI,IAAhBQ,EAAKE,OAAe,KACnB,yBAAKV,UAAU,kBACZQ,EAAKG,KAAI,SAACC,EAAKC,GAAN,OACR,yBAAKC,IAAKD,EAAGb,UAAU,aACrB,kBAAC,EAAD,CAAMD,MAAI,GAAEa,QAKpB,yBAAKZ,UAAU,SACf,0BAAMA,UAAU,sBAAsBG,M,oBCf7BY,UAhBI,SAAC,GAAD,QACjBC,YAAeC,EADE,EACFA,YAAaC,EADX,EACWA,KADX,OAGjB,kBAAC,IAAD,CACEC,OAAQ,kBAAC,EAAD,CACNd,MAAOY,EAAYZ,MACnBC,QAAQ,OACRC,KAAMU,EAAYV,KAClBC,KAAMS,EAAYT,MAAQ,MAE5B,6BAASR,UAAU,iEACjB,yBAAKoB,wBAAyB,CAAEC,OAAQH,S","file":"component---src-components-blog-layout-tsx-c0c0f8a6e587da50eeea.js","sourcesContent":["import { Link as GatbsyLink } from 'gatsby'\nimport React, { FC } from 'react'\n\ninterface LinkProps {\n  to: string\n  dark?: boolean\n}\n\nconst Link: FC<LinkProps> = ({ to, children, dark = false }) => (\n  <GatbsyLink\n    to={to}\n    className={\n      'transition-all duration-200 ' +\n      (dark ? 'underline-gradient-dark' : 'underline-gradient')\n    }\n  >\n    {children}\n  </GatbsyLink>\n)\n\nexport default Link\n","import React, { FC } from 'react'\nimport { gradient } from '../common-styles'\n\nconst Chip: FC<{ dark?: boolean }> = ({ children, dark = false }) => (\n  <span className={`rounded p-px ${gradient} bg-gradient-45`}>\n    <span className={`rounded ${dark ? 'bg-darkest-gray' : 'bg-white'} px-2`}>\n      <span className={`${dark ? 'text-gray-200' : 'text-gray-900'} text-xs font-mono antialiased leading-none`}>\n        {children}\n      </span>\n    </span>\n  </span>\n)\n\nexport default Chip\n","import React, { FC } from 'react'\nimport Link from './link'\nimport Chip from '../components/chip'\n\nimport { ArrowUpLeft, ArrowUpRight } from 'react-feather'\n\nconst iconBackDark = (\n  <span className=\"flex items-center\">\n    <Link dark to=\"/\">\n      <span className=\"font-semibold\">Home</span>\n    </Link>\n    <ArrowUpRight className=\"h-5\" />\n  </span>\n)\n\ninterface HeaderProps {\n  subhead: string\n  title: string\n  tags?: string[]\n  date?: string\n  description?: string\n}\n\nconst Header: FC<HeaderProps> = ({\n  title,\n  subhead,\n  date,\n  tags = [],\n  description,\n}) => (\n  <>\n    <div className=\"text-4xl font-serif font-extrabold leading-tight antialiased\">\n      <h5 className=\"text-gray-500 \">{subhead}</h5>\n      <h2 className=\"text-white\">{title}</h2>\n      <div className=\"mt-3\"></div>\n    </div>\n\n    {date == null ? (\n      <div className=\"mt-10\"></div>\n    ) : (\n      <h6 className=\"uppercase text-sm font-light tracking-wide text-gray-300\">\n        {date}\n      </h6>\n    )}\n\n    <div className=\"mt-4\"></div>\n\n    {description == null ? null : (\n      <p className=\"text-gray-300\">{description}</p>\n    )}\n\n    <div className=\"flex justify-between mt-10\">\n      {tags.length === 0 ? null : (\n        <div className=\"flex flex-wrap\">\n          {tags.map((tag, i) => (\n            <div key={i} className=\"mr-4 mb-3\">\n              <Chip dark>{tag}</Chip>\n            </div>\n          ))}\n        </div>\n      )}\n      <div className=\"mr-8\"></div>\n      <span className=\"text-cool-gray-300\">{iconBackDark}</span>\n    </div>\n  </>\n)\n\nexport default Header\n","import React, { FC, Children } from 'react'\nimport Layout from '../components/layout'\nimport Header from './layout-article-header'\nimport Highlight, { Prism, Language, defaultProps } from 'prism-react-renderer'\nimport './highlight.css'\nimport './prose.css'\nimport { PageProps } from 'gatsby'\n\n// TODO: rest\n\nconst inlineCode: FC = (p) => (\n  <code className=\"bg-cool-gray-100 rounded px-px -mx-px\" {...p} />\n)\n\n// TODO: type safe serializer\ninterface PostMetadata {\n  date: string\n  tags?: string[]\n  title: string\n  description?: string\n}\n\ninterface PageContext {\n  html: string\n  frontmatter: {\n    title: string\n    date: string\n    tags: string[] | null\n  }\n}\n\nconst BlogLayout = ({\n  pageContext: { frontmatter, html },\n}: PageProps<any, PageContext>) => (\n  <Layout\n    header={<Header\n      title={frontmatter.title}\n      subhead=\"Blog\"\n      date={frontmatter.date}\n      tags={frontmatter.tags || []} />}\n  >\n    <article className=\"max-w-2xl text-lg mx-auto text-gray-800 leading-relaxed prose\">\n      <div dangerouslySetInnerHTML={{ __html: html }} />\n    </article>\n  </Layout>\n)\n\nexport default BlogLayout\n"],"sourceRoot":""}