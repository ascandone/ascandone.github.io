{"componentChunkName":"component---src-components-blog-layout-tsx","path":"/blog/understanding-package-json","result":{"pageContext":{"frontmatter":{"date":"March 11, 2019","tags":null,"title":"Understanding package.json"},"html":"<p>I began my Computer Science degree with an intensive introduction course in C. We used makefiles to compile and run each of our assignments.</p>\n<p>When I started learning modern web development in early 2018, I had no idea what Node.js or NPM was. My idea of building website involved writing HTML, CSS, and occasionally including a <code class=\"language-text\">script</code> tag. A year or so later, I'm finally comfortable with modern techniques.</p>\n<p>A major source of confusion for me was <code class=\"language-text\">package.json</code>. In short, <code class=\"language-text\">package.json</code> is a makefile for the JavaScript environment, with some caveats.</p>\n<h3>Package Scripts</h3>\n<p>Package managers like Yarn and NPM also serve as script runners for JavaScript projects. Unlike makefiles, scripts in <code class=\"language-text\">package.json</code> run in a special environment.</p>\n<p>Packages in <code class=\"language-text\">node_modules</code> that define an executable will have that executable appended to the environment PATH before running any scripts. This can be confusing. Let's see an example:</p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token property\">\"devDependencies\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"eslint\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"1.0.0\"</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token property\">\"scripts\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"lint\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"eslint .\"</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Running <code class=\"language-text\">yarn lint</code> will work correctly. However, just running <code class=\"language-text\">eslint .</code> from the command line will fail!<sup>1</sup> This was extremely confusing at first, did I have  ESLint installed or not?</p>\n<p>The package script will work because Yarn recognizes that the ESLint dependency includes an executable, and appends it to the environment PATH when running any scripts.</p>\n<p>This is a great advantage of the modular nature of the JavaScript ecosystem. You don't have to install any global scripts or clutter up your PATH to work with JavaScript projects, just <code class=\"language-text\">yarn install</code>.</p>\n<hr>\n<ol>\n<li>Unless you have installed ESLint globally, which does add the executable to your PATH (<code class=\"language-text\">yarn global add eslint</code>)</li>\n</ol>"}},"staticQueryHashes":[]}