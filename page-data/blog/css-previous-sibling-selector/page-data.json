{"componentChunkName":"component---src-components-blog-layout-tsx","path":"/blog/css-previous-sibling-selector","result":{"pageContext":{"frontmatter":{"date":"Mar 24, 2020","tags":null,"title":"CSS Previous Sibling Selector"},"html":"<p>There is no previous sibling selector in CSS. Instead, we can achieve the same behavior by using flexbox and the <code class=\"language-text\">order</code> property.</p>\n<p>Let's say you're adding a prefix to an input, and would like to style the prefix when the input is focused. If you read from left to right and top to bottom (English), you likely structure your DOM like that too:</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>container<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>prefix<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>https://<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<div class=\"example\">\n  <div class=\"container\">\n    <div class=\"prefix\">https://</div>\n    <input type=\"text\" />\n  </div>\n</div>\n<p>In this markup, there's no way to target the <code class=\"language-text\">.prefix</code> class using <code class=\"language-text\">input:focus</code>, because we have no preceding selector. Instead, we can rewrite the DOM structure so that prefix appears <em>after</em> the input:</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>container<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>prefix<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>https://<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p>And use flexbox to change the order of appearance:</p>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">.container</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">display</span><span class=\"token punctuation\">:</span> flex<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\">.container input</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">order</span><span class=\"token punctuation\">:</span> 1<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\">.container .prefix</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">order</span><span class=\"token punctuation\">:</span> 2<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Now you can select the prefix using the sibling selector:</p>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">.container input:focus + .prefix</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">/* Focus styles... */</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<div class=\"example\">\n  <div class=\"container fixed\">\n    <input type=\"text\" />\n    <div class=\"prefix\">https://</div>\n  </div>\n</div>\n<p>In the case of an input, the simple solution is to use <a href=\"https://caniuse.com/#search=focus-within\"><code class=\"language-text\">:focus-within</code></a>, which has good browser support but is still experimental. Maybe you have other use cases for this trick though, <a href=\"https://twitter.com/pacocoursey\">let me know</a>!</p>\n<hr>\n<p>This post is inspired by my own work on inputs, and this paragraph:</p>\n<blockquote>\n<p>Unfortunately, trying to use <code class=\"language-text\">:focus</code> limits what you can do: you can style the input or siblings that come after the input… but that’s it.\n— <a href=\"https://exogen.github.io/blog/focus-state\">Initializing focus state in React</a></p>\n</blockquote>\n<style>\n  .example {\n    border-radius: var(--radius);\n    background: var(--lighter-gray);\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    padding: var(--gap);\n  }\n\n  .example .container {\n    display: flex;\n    align-items: center;\n  }\n\n  .example input {\n    height: 2.5rem;\n    font-size: 1rem;\n    border-radius: 0 var(--inline-radius) var(--inline-radius) 0;\n    background: var(--bg);\n    color: var(--fg);\n    border: 1px solid var(--light-gray);\n    padding: 0 var(--gap-half);\n    outline: none;\n    transition: border-color var(--transition);\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    margin: 0;\n  }\n\n  .example input:focus {\n    border-color: var(--gray);\n  }\n\n  .example .prefix {\n    background: var(--lightest-gray);\n    border-radius: var(--inline-radius) 0 0 var(--inline-radius);\n    padding: 0 var(--gap-half);\n    height: 2.5rem;\n    font-size: 1rem;\n    line-height: normal;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    border: 1px solid var(--light-gray);\n    border-right: 0;\n    user-select: none;\n    color: var(--gray);\n    transition: color var(--transition);\n    margin: 0;\n  }\n\n  .example .container.fixed input {\n    order: 1;\n  }\n\n  .example .container.fixed .prefix {\n    order: 0;\n  }\n\n  .example .container.fixed input:focus + .prefix {\n    color: var(--fg);\n  }\n</style>"}},"staticQueryHashes":[]}